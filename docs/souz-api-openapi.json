{
  "openapi": "3.0.3",
  "info": {
    "title": "Souz Backend API",
    "description": "Teacher authentication, academic period, class, student, subject, time slot, course session, and exam management API",
    "license": {
      "name": ""
    },
    "version": "1.0.0"
  },
  "paths": {
    "/academic-periods": {
      "get": {
        "tags": ["academic-periods"],
        "operationId": "list_academic_periods_handler",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "school_year_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of academic periods",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcademicPeriodsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["academic-periods"],
        "operationId": "create_academic_period_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcademicPeriodCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Academic period created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcademicPeriodResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/academic-periods/{id}": {
      "delete": {
        "tags": ["academic-periods"],
        "operationId": "delete_academic_period_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Academic period ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Academic period deleted"
          },
          "404": {
            "description": "Academic period not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - academic period has dependencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "patch": {
        "tags": ["academic-periods"],
        "operationId": "update_academic_period_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Academic period ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcademicPeriodPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Academic period updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcademicPeriodResponse"
                }
              }
            }
          },
          "404": {
            "description": "Academic period not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "POST /auth/login - Authenticate user and set HttpOnly cookie",
        "operationId": "login_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["auth"],
        "operationId": "logout_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Refresh token invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["auth"],
        "summary": "GET /me - Get current user profile (requires authentication)",
        "operationId": "profile_handler",
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["auth"],
        "operationId": "refresh_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tokens rotated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh token format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Refresh token invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "POST /auth/register - Register a new teacher",
        "operationId": "register_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/classes": {
      "get": {
        "tags": ["classes"],
        "operationId": "list_classes_handler",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "school_year_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of classes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassesListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["classes"],
        "operationId": "create_class_handler",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key used to safely retry requests",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Class already created for idempotent request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassResponse"
                }
              }
            }
          },
          "201": {
            "description": "Class created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/classes/{id}": {
      "get": {
        "tags": ["classes"],
        "operationId": "get_class_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Class ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Class found",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Resource version for concurrency control"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassResponse"
                }
              }
            }
          },
          "404": {
            "description": "Class not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "delete": {
        "tags": ["classes"],
        "operationId": "delete_class_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Class ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Class soft deleted"
          },
          "404": {
            "description": "Class not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - cannot delete class with dependencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "patch": {
        "tags": ["classes"],
        "operationId": "update_class_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Class ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Class updated",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Resource version"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassResponse"
                }
              }
            }
          },
          "404": {
            "description": "Class not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - class code already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed - ETag mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "428": {
            "description": "Precondition Required - If-Match header missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/classes/{id}/exams": {
      "get": {
        "tags": ["classes"],
        "operationId": "list_class_exams_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Class ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "exam_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "is_published",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exams for the class retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Class not found"
          },
          "422": {
            "description": "Invalid query parameters"
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/classes/{id}/students": {
      "get": {
        "tags": ["classes"],
        "operationId": "list_class_students_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Class ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of students in the class",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassStudentsListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden - class not owned by user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Class not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["classes"],
        "operationId": "enroll_student_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassEnrollStudentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Student enrolled in class",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassEnrollStudentResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Class or student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Student already enrolled in class",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/classes/{id}/students/analytics": {
      "get": {
        "tags": ["classes"],
        "operationId": "get_class_student_analytics_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Class ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for analytics (format: YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for analytics (format: YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort criterion: name, attendance, participation",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Class student analytics calculated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassStudentAnalyticsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Class not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/classes/{id}/students/{student_id}": {
      "delete": {
        "tags": ["classes"],
        "operationId": "unenroll_student_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Student unenrolled from class"
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Class or student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Student not enrolled in this class",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/course-sessions": {
      "get": {
        "tags": ["course-sessions"],
        "operationId": "list_sessions_handler",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "class_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of course sessions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseSessionsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["course-sessions"],
        "operationId": "create_session_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseSessionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Course session created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseSessionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - session already exists for this class/date/time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error or scheduling on break time slot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/course-sessions/{id}": {
      "get": {
        "tags": ["course-sessions"],
        "operationId": "get_session_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Course session identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course session retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrichedCourseSessionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Course session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "delete": {
        "tags": ["course-sessions"],
        "operationId": "delete_session_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Course session deleted"
          },
          "404": {
            "description": "Session not found"
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "patch": {
        "tags": ["course-sessions"],
        "operationId": "update_session_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseSessionPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Course session updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseSessionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found"
          },
          "409": {
            "description": "Conflict - reschedule would conflict with another session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error or reschedule to break time slot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/course-sessions/{id}/attendance": {
      "get": {
        "tags": ["course-sessions"],
        "operationId": "get_session_attendance_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Course session identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session attendance retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionAttendanceViewResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Course session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/exams": {
      "get": {
        "tags": ["exams"],
        "operationId": "list_exams_handler",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "class_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "school_year_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "exam_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "is_published",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of exams",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["exams"],
        "operationId": "create_exam_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExamCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Exam created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamResponse"
                }
              }
            }
          },
          "404": {
            "description": "Referenced resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/exams/{id}": {
      "get": {
        "tags": ["exams"],
        "operationId": "get_exam_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exam details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamResponse"
                }
              }
            }
          },
          "404": {
            "description": "Exam not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "delete": {
        "tags": ["exams"],
        "operationId": "delete_exam_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Exam deleted"
          },
          "404": {
            "description": "Exam not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "patch": {
        "tags": ["exams"],
        "operationId": "update_exam_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExamUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Exam updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamResponse"
                }
              }
            }
          },
          "404": {
            "description": "Exam not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/exams/{id}/results": {
      "get": {
        "tags": ["exam-results"],
        "operationId": "list_exam_results_paginated_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Exam ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor (base64 encoded)",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results (default: 50, max: 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of exam results with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamResultsListPaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid pagination cursor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Exam not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "put": {
        "tags": ["exam-results"],
        "operationId": "upsert_exam_results_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Upsert exam results for students",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExamResultsUpsertRequest"
              },
              "examples": {
                "Absent student": {
                  "description": "Mark a student as absent",
                  "value": {
                    "items": [
                      {
                        "comments": "Sick leave",
                        "is_absent": true,
                        "student_id": "550e8400-e29b-41d4-a716-446655440000"
                      }
                    ]
                  }
                },
                "Clear comments": {
                  "description": "Update points and clear comments",
                  "value": {
                    "items": [
                      {
                        "comments": null,
                        "is_absent": false,
                        "points_obtained": 18.0,
                        "student_id": "550e8400-e29b-41d4-a716-446655440000"
                      }
                    ]
                  }
                },
                "Present student with grade": {
                  "description": "Record points for a present student",
                  "value": {
                    "items": [
                      {
                        "comments": "Excellent work",
                        "is_absent": false,
                        "points_obtained": 16.5,
                        "student_id": "550e8400-e29b-41d4-a716-446655440000"
                      }
                    ]
                  }
                },
                "Remove result (mark absent)": {
                  "description": "Remove a previous result by marking student as absent",
                  "value": {
                    "items": [
                      {
                        "comments": "Result cancelled - see teacher",
                        "is_absent": true,
                        "student_id": "550e8400-e29b-41d4-a716-446655440000"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Exam results updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamResultsUpsertResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied - exam belongs to another user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Exam or student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error - missing points_obtained for present student",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/exams/{id}/stats": {
      "get": {
        "tags": ["exam-results"],
        "operationId": "get_exam_stats_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exam statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamStatsDto"
                }
              }
            }
          },
          "404": {
            "description": "Exam not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/school-years": {
      "get": {
        "tags": ["school-years"],
        "operationId": "list_school_years_handler",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of school years",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolYearsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["school-years"],
        "operationId": "create_school_year_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolYearCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "School year created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolYearResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/school-years/{id}": {
      "get": {
        "tags": ["school-years"],
        "operationId": "get_school_year_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "School year ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "School year details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolYearResponse"
                }
              }
            }
          },
          "404": {
            "description": "School year not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "delete": {
        "tags": ["school-years"],
        "operationId": "delete_school_year_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "School year ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "School year deleted"
          },
          "404": {
            "description": "School year not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - school year has dependencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "patch": {
        "tags": ["school-years"],
        "operationId": "update_school_year_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "School year ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolYearPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "School year updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolYearResponse"
                }
              }
            }
          },
          "404": {
            "description": "School year not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/school-years/{id}/classes": {
      "get": {
        "tags": ["school-years"],
        "operationId": "list_school_year_classes_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "School Year ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Classes for the school year retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassesListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "School year not found"
          },
          "422": {
            "description": "Invalid query parameters"
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/sessions/{session_id}/attendance": {
      "get": {
        "tags": ["attendance"],
        "summary": "List attendance/participation records for a course session",
        "operationId": "list_attendance_handler",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of attendance records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "put": {
        "tags": ["attendance"],
        "summary": "Upsert attendance/participation records for a course session",
        "operationId": "upsert_attendance_handler",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceUpsertRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Attendance records updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/sessions/{session_id}/attendance/{id}": {
      "get": {
        "tags": ["attendance"],
        "summary": "Get a specific attendance record by ID within a session",
        "operationId": "get_attendance_handler",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attendance record details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentParticipationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Attendance record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "delete": {
        "tags": ["attendance"],
        "summary": "Delete a specific attendance record by ID within a session",
        "operationId": "delete_attendance_handler",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Attendance record deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Attendance record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/students": {
      "get": {
        "tags": ["students"],
        "operationId": "list_students_handler",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "class_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "external_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of students",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["students"],
        "operationId": "create_student_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Student created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/students/{id}": {
      "get": {
        "tags": ["students"],
        "operationId": "get_student_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student found",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Entity tag for concurrency control"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "delete": {
        "tags": ["students"],
        "operationId": "delete_student_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Student soft deleted"
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - cannot delete student with dependencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "patch": {
        "tags": ["students"],
        "operationId": "update_student_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Student updated",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Entity tag for concurrency control"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed - ETag mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "428": {
            "description": "Precondition required - If-Match header missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/students/{id}/attendance-rate": {
      "get": {
        "tags": ["students"],
        "operationId": "get_attendance_rate_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attendance rate calculated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceRateResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid date range",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/students/{id}/classes": {
      "get": {
        "tags": ["students"],
        "operationId": "list_student_classes_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Classes for the student retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentClassesListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Student not found"
          },
          "422": {
            "description": "Invalid query parameters"
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/students/{id}/participation-average": {
      "get": {
        "tags": ["students"],
        "operationId": "get_participation_average_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Participation average calculated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParticipationAverageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid date range",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/students/{id}/profile": {
      "get": {
        "tags": ["students"],
        "operationId": "get_student_profile_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Complete student profile with analytics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProfileResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid date range",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/students/{id}/results": {
      "get": {
        "tags": ["students"],
        "operationId": "list_student_exam_results_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Filter by exam date from (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "Filter by exam date to (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "description": "Filter by subject ID",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor (base64 encoded)",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return (default: 20, max: 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of student exam results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentExamResultsListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/subjects": {
      "get": {
        "tags": ["subjects"],
        "operationId": "list_subjects_handler",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of subjects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["subjects"],
        "operationId": "create_subject_handler",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key used to safely retry requests",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subject already created for idempotent request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectResponse"
                }
              }
            }
          },
          "201": {
            "description": "Subject created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/subjects/{id}": {
      "get": {
        "tags": ["subjects"],
        "operationId": "get_subject_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subject ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subject found",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Entity tag for concurrency control"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectResponse"
                }
              }
            }
          },
          "404": {
            "description": "Subject not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "delete": {
        "tags": ["subjects"],
        "operationId": "delete_subject_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subject ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Subject soft deleted"
          },
          "404": {
            "description": "Subject not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - cannot delete subject with dependencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "patch": {
        "tags": ["subjects"],
        "operationId": "update_subject_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subject ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subject updated",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Entity tag for concurrency control"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectResponse"
                }
              }
            }
          },
          "404": {
            "description": "Subject not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed - ETag mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "428": {
            "description": "Precondition required - If-Match header missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/subjects/{id}/exams": {
      "get": {
        "tags": ["subjects"],
        "operationId": "list_subject_exams_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subject ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "exam_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true
            }
          },
          {
            "name": "is_published",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exams for the subject retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Subject not found"
          },
          "422": {
            "description": "Invalid query parameters"
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/time-slots": {
      "get": {
        "tags": ["time-slots"],
        "summary": "WAIVER CONDITION: RLS testing endpoint",
        "description": "This handler verifies proper RLS implementation for multi-user data isolation",
        "operationId": "list_time_slots_handler",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "is_break",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of time slots",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSlotsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["time-slots"],
        "summary": "WAIVER CONDITION: Security testing endpoint documentation",
        "description": "This handler implements comprehensive validation and overlap detection\nas required by the security waiver conditions",
        "operationId": "create_time_slot_handler",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key used to safely retry requests",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSlotCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Time slot already created for idempotent request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSlotResponse"
                }
              }
            }
          },
          "201": {
            "description": "Time slot created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSlotResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error or overlap detected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/time-slots/{id}": {
      "get": {
        "tags": ["time-slots"],
        "operationId": "get_time_slot_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time slot ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Time slot found",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Resource version for concurrency control"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSlotResponse"
                }
              }
            }
          },
          "404": {
            "description": "Time slot not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "delete": {
        "tags": ["time-slots"],
        "operationId": "delete_time_slot_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time slot ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Time slot soft deleted"
          },
          "404": {
            "description": "Time slot not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - cannot delete time slot with dependencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "patch": {
        "tags": ["time-slots"],
        "operationId": "update_time_slot_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time slot ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSlotPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Time slot updated",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Resource version"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSlotResponse"
                }
              }
            }
          },
          "404": {
            "description": "Time slot not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed - ETag mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error (including schedule conflicts)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "428": {
            "description": "Precondition Required - If-Match header missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/weekly-templates": {
      "get": {
        "tags": ["weekly-templates"],
        "operationId": "list_weekly_templates_handler",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "school_year_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "day_of_week",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "class_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of weekly templates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeeklyTemplatesListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "post": {
        "tags": ["weekly-templates"],
        "operationId": "create_weekly_template_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeeklyTemplateCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Weekly template created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeeklyTemplateResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - duplicate template",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    },
    "/weekly-templates/{id}": {
      "delete": {
        "tags": ["weekly-templates"],
        "operationId": "delete_weekly_template_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Weekly template ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Weekly template deleted successfully"
          },
          "404": {
            "description": "Weekly template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      },
      "patch": {
        "tags": ["weekly-templates"],
        "operationId": "update_weekly_template_handler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Weekly template ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeeklyTemplatePatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Weekly template updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeeklyTemplateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Weekly template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - duplicate template",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_cookie": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AcademicPeriodCreateRequest": {
        "type": "object",
        "description": "Payload for creating an academic period",
        "required": ["school_year_id", "name", "order"],
        "properties": {
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "AcademicPeriodPatchRequest": {
        "type": "object",
        "description": "Payload for updating an academic period",
        "properties": {
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "AcademicPeriodResponse": {
        "type": "object",
        "description": "Representation of an academic period in API responses",
        "required": [
          "id",
          "school_year_id",
          "name",
          "order",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AcademicPeriodsListParams": {
        "type": "object",
        "description": "Query parameters supported by the academic periods list endpoint",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "AcademicPeriodsListResponse": {
        "type": "object",
        "description": "Paginated list response for academic periods",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AcademicPeriodResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AtRiskStudentResponse": {
        "type": "object",
        "description": "At-risk student information",
        "required": ["student_id", "full_name", "risk_factors"],
        "properties": {
          "attendance_rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "full_name": {
            "type": "string"
          },
          "participation_average": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "risk_factors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AttendanceDetails": {
        "type": "object",
        "description": "Attendance details for student profile",
        "required": ["total_sessions", "attended_sessions"],
        "properties": {
          "attended_sessions": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "total_sessions": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "AttendanceRateParams": {
        "type": "object",
        "description": "Query parameters for attendance rate calculation",
        "required": ["start_date", "end_date"],
        "properties": {
          "end_date": {
            "type": "string",
            "example": "2024-12-31"
          },
          "start_date": {
            "type": "string",
            "example": "2024-01-01"
          }
        }
      },
      "AttendanceRateResponse": {
        "type": "object",
        "description": "Response for attendance rate calculation",
        "required": [
          "student_id",
          "total_sessions",
          "attended_sessions",
          "period"
        ],
        "properties": {
          "attendance_rate": {
            "type": "number",
            "format": "double",
            "example": 85.67,
            "nullable": true
          },
          "attended_sessions": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "period": {
            "$ref": "#/components/schemas/DateRangeInfo"
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          },
          "total_sessions": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "AttendanceResponse": {
        "type": "object",
        "description": "Response containing attendance/participation records",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentParticipationResponse"
            },
            "description": "List of attendance/participation items"
          }
        }
      },
      "AttendanceSummaryResponse": {
        "type": "object",
        "description": "Summary statistics for session attendance",
        "required": ["total_students", "present_count", "absent_count"],
        "properties": {
          "absent_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of absent students",
            "minimum": 0
          },
          "present_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of present students",
            "minimum": 0
          },
          "total_students": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of students",
            "minimum": 0
          }
        }
      },
      "AttendanceUpsertItemRequest": {
        "type": "object",
        "description": "Request item for attendance upsert operation",
        "required": ["student_id", "is_present"],
        "properties": {
          "behavior": {
            "type": "string",
            "description": "Optional behavior notes",
            "nullable": true
          },
          "camera_enabled": {
            "type": "boolean",
            "description": "Optional camera enabled status",
            "nullable": true
          },
          "homework_done": {
            "type": "boolean",
            "description": "Optional homework completion status",
            "nullable": true
          },
          "is_present": {
            "type": "boolean",
            "description": "Whether the student was present"
          },
          "participation_level": {
            "type": "integer",
            "format": "int32",
            "description": "Optional participation level (0-3)",
            "nullable": true
          },
          "specific_remarks": {
            "type": "string",
            "description": "Optional specific remarks",
            "nullable": true
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the student"
          },
          "technical_issues": {
            "type": "string",
            "description": "Optional technical issues notes",
            "nullable": true
          }
        }
      },
      "AttendanceUpsertRequest": {
        "type": "object",
        "description": "Request payload for batch attendance upsert",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendanceUpsertItemRequest"
            },
            "description": "List of attendance items to upsert"
          }
        }
      },
      "ClassAnalyticsMetadata": {
        "type": "object",
        "description": "Metadata about the analytics calculation",
        "required": ["sort_applied", "period_source", "calculation_time"],
        "properties": {
          "calculation_time": {
            "type": "string"
          },
          "period_source": {
            "type": "string"
          },
          "sort_applied": {
            "type": "string"
          }
        }
      },
      "ClassAnalyticsParams": {
        "type": "object",
        "description": "Query parameters for class student analytics endpoint",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date for analytics (format: YYYY-MM-DD)",
            "example": "2024-12-31",
            "nullable": true
          },
          "sort_by": {
            "type": "string",
            "description": "Sort criterion: name, attendance, participation",
            "example": "name",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Start date for analytics (format: YYYY-MM-DD)",
            "example": "2024-09-01",
            "nullable": true
          }
        }
      },
      "ClassCreateRequest": {
        "type": "object",
        "description": "Payload for creating a class",
        "required": ["class_code", "school_year_id"],
        "properties": {
          "class_code": {
            "type": "string"
          },
          "grade_label": {
            "type": "string",
            "nullable": true
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ClassEnrollStudentRequest": {
        "type": "object",
        "description": "Payload for enrolling a student in a class",
        "required": ["student_id"],
        "properties": {
          "student_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ClassEnrollStudentResponse": {
        "type": "object",
        "description": "Response for successfully enrolling a student in a class",
        "required": ["student", "enrolled_at"],
        "properties": {
          "enrolled_at": {
            "type": "string",
            "format": "date-time"
          },
          "student": {
            "$ref": "#/components/schemas/ClassStudentResponse"
          }
        }
      },
      "ClassExamsListParams": {
        "type": "object",
        "description": "Query parameters for listing exams by class ID",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "exam_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "is_published": {
            "type": "boolean",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "to": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "ClassPatchRequest": {
        "type": "object",
        "description": "Payload for updating a class",
        "properties": {
          "class_code": {
            "type": "string",
            "nullable": true
          },
          "grade_label": {
            "type": "string",
            "nullable": true
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "ClassResponse": {
        "type": "object",
        "description": "Representation of a class in API responses",
        "required": [
          "id",
          "class_code",
          "school_year_id",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "class_code": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "grade_label": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClassStatsResponse": {
        "type": "object",
        "description": "Class-level statistics for analytics",
        "required": [
          "total_students",
          "students_with_data",
          "distributions",
          "at_risk_students"
        ],
        "properties": {
          "at_risk_students": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtRiskStudentResponse"
            }
          },
          "average_attendance_rate": {
            "type": "number",
            "format": "double",
            "example": 82.3,
            "nullable": true
          },
          "average_participation": {
            "type": "number",
            "format": "double",
            "example": 3.6,
            "nullable": true
          },
          "distributions": {
            "$ref": "#/components/schemas/DistributionsResponse"
          },
          "students_with_data": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "total_students": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "ClassStudentAnalyticsResponse": {
        "type": "object",
        "description": "Complete bulk analytics response for all students in a class",
        "required": [
          "class_id",
          "students",
          "class_statistics",
          "analytics_period",
          "metadata"
        ],
        "properties": {
          "analytics_period": {
            "$ref": "#/components/schemas/DateRangeInfo"
          },
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "class_statistics": {
            "$ref": "#/components/schemas/ClassStatsResponse"
          },
          "metadata": {
            "$ref": "#/components/schemas/ClassAnalyticsMetadata"
          },
          "students": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassStudentSummary"
            }
          }
        }
      },
      "ClassStudentResponse": {
        "type": "object",
        "description": "Representation of a student in class students list API responses",
        "required": [
          "id",
          "first_name",
          "last_name",
          "full_name",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "full_name": {
            "type": "string",
            "example": "Marie Dupont"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "last_name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClassStudentSummary": {
        "type": "object",
        "description": "Student summary with analytics in bulk endpoint",
        "required": ["student_id", "full_name", "session_counts"],
        "properties": {
          "attendance_rate": {
            "type": "number",
            "format": "double",
            "example": 85.5,
            "nullable": true
          },
          "full_name": {
            "type": "string"
          },
          "participation_average": {
            "type": "number",
            "format": "double",
            "example": 3.8,
            "nullable": true
          },
          "session_counts": {
            "$ref": "#/components/schemas/SessionCounts"
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ClassStudentsListParams": {
        "type": "object",
        "description": "Query parameters supported by the class students list endpoint",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "q": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClassStudentsListResponse": {
        "type": "object",
        "description": "Paginated list response for students in a class",
        "required": ["class_id", "items"],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassStudentResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClassesListParams": {
        "type": "object",
        "description": "Query parameters supported by the classes list endpoint",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "ClassesListResponse": {
        "type": "object",
        "description": "Paginated list response for classes",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CourseSessionCreateRequest": {
        "type": "object",
        "description": "Payload for creating a course session",
        "required": ["class_id", "subject_id", "time_slot_id", "session_date"],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "homework_assigned": {
            "type": "string",
            "nullable": true
          },
          "is_makeup": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "objectives": {
            "type": "string",
            "nullable": true
          },
          "session_date": {
            "type": "string",
            "format": "date",
            "example": "2025-01-20"
          },
          "status": {
            "type": "string",
            "example": "planned",
            "nullable": true
          },
          "subject_id": {
            "type": "string",
            "format": "uuid"
          },
          "time_slot_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CourseSessionPatchRequest": {
        "type": "object",
        "description": "Payload for updating a course session",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "homework_assigned": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "objectives": {
            "type": "string",
            "nullable": true
          },
          "session_date": {
            "type": "string",
            "format": "date",
            "example": "2025-01-21",
            "nullable": true
          },
          "status": {
            "type": "string",
            "example": "in_progress",
            "nullable": true
          },
          "time_slot_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "CourseSessionResponse": {
        "type": "object",
        "description": "Representation of a course session in API responses",
        "required": [
          "id",
          "class_id",
          "subject_id",
          "time_slot_id",
          "session_date",
          "status",
          "is_makeup",
          "is_moved",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "homework_assigned": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_makeup": {
            "type": "boolean"
          },
          "is_moved": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "objectives": {
            "type": "string",
            "nullable": true
          },
          "session_date": {
            "type": "string",
            "format": "date",
            "example": "2025-01-20"
          },
          "status": {
            "type": "string",
            "example": "planned"
          },
          "subject_id": {
            "type": "string",
            "format": "uuid"
          },
          "time_slot_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CourseSessionsListParams": {
        "type": "object",
        "description": "Query parameters supported by the course sessions list endpoint",
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2025-01-20",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date",
            "example": "2025-01-01",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "status": {
            "type": "string",
            "example": "planned",
            "nullable": true
          },
          "subject_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "to": {
            "type": "string",
            "format": "date",
            "example": "2025-01-31",
            "nullable": true
          }
        }
      },
      "CourseSessionsListResponse": {
        "type": "object",
        "description": "Paginated list response for course sessions",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CourseSessionResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DateRangeInfo": {
        "type": "object",
        "description": "Date range information for attendance period",
        "required": ["start_date", "end_date"],
        "properties": {
          "end_date": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          }
        }
      },
      "Decimal": {
        "type": "string",
        "format": "decimal",
        "description": "A decimal number represented as a string to preserve precision",
        "example": "123.45",
        "pattern": "^-?\\d+(\\.\\d+)?$"
      },
      "DistributionStats": {
        "type": "object",
        "description": "Distribution statistics for analytics metrics",
        "properties": {
          "max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "median": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "quartile_25": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "quartile_75": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "DistributionsResponse": {
        "type": "object",
        "description": "Distributions for both attendance and participation",
        "required": ["attendance", "participation"],
        "properties": {
          "attendance": {
            "$ref": "#/components/schemas/DistributionStats"
          },
          "participation": {
            "$ref": "#/components/schemas/DistributionStats"
          }
        }
      },
      "EnrichedCourseSessionResponse": {
        "type": "object",
        "description": "Enriched course session response with related class, subject, and time slot data",
        "required": ["session", "class", "subject", "time_slot"],
        "properties": {
          "class": {
            "$ref": "#/components/schemas/ClassResponse"
          },
          "session": {
            "$ref": "#/components/schemas/CourseSessionResponse"
          },
          "subject": {
            "$ref": "#/components/schemas/SubjectResponse"
          },
          "time_slot": {
            "$ref": "#/components/schemas/TimeSlotResponse"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ExamCreateRequest": {
        "type": "object",
        "description": "Payload for creating an exam",
        "required": [
          "title",
          "class_id",
          "subject_id",
          "school_year_id",
          "exam_date"
        ],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "coefficient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "duration_minutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "exam_date": {
            "type": "string",
            "format": "date"
          },
          "exam_type": {
            "type": "string",
            "nullable": true
          },
          "instructions": {
            "type": "string",
            "nullable": true
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid"
          },
          "subject_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "total_points": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          }
        }
      },
      "ExamResponse": {
        "type": "object",
        "description": "Representation of an exam in API responses",
        "required": [
          "id",
          "class_id",
          "subject_id",
          "school_year_id",
          "title",
          "exam_date",
          "is_published",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "coefficient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "duration_minutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "exam_date": {
            "type": "string",
            "format": "date"
          },
          "exam_type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "instructions": {
            "type": "string",
            "nullable": true
          },
          "is_published": {
            "type": "boolean"
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid"
          },
          "subject_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "total_points": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExamResultUpsertItemDto": {
        "type": "object",
        "description": "Single item for upserting an exam result",
        "required": ["student_id"],
        "properties": {
          "comments": {
            "type": "string",
            "description": "Optional comments about the result. Set to null to clear existing comments.",
            "example": "Excellent work",
            "nullable": true
          },
          "is_absent": {
            "type": "boolean",
            "description": "Whether the student was absent. Defaults to false if not provided. When true, points_obtained is ignored and grade will be marked as \"ABS\".",
            "example": "false",
            "nullable": true
          },
          "points_obtained": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "Student ID for this result"
          }
        }
      },
      "ExamResultsListPaginatedResponse": {
        "type": "object",
        "description": "Response for listing exam results with pagination",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentExamResultDto"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExamResultsListParams": {
        "type": "object",
        "description": "Query parameters for listing exam results with pagination",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "Pagination cursor (base64 encoded)",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return (default: 20, max: 100)",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          }
        }
      },
      "ExamResultsListResponse": {
        "type": "object",
        "description": "Response for listing exam results (without pagination - deprecated)",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentExamResultDto"
            }
          }
        }
      },
      "ExamResultsUpsertRequest": {
        "type": "object",
        "description": "Request payload for upserting exam results",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExamResultUpsertItemDto"
            }
          }
        }
      },
      "ExamResultsUpsertResponse": {
        "type": "object",
        "description": "Response for exam results upsert operation",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentExamResultDto"
            }
          }
        }
      },
      "ExamStatsDto": {
        "type": "object",
        "description": "Exam statistics response",
        "required": ["count", "present_count", "absent_count", "buckets"],
        "properties": {
          "absent_count": {
            "type": "integer",
            "format": "int64"
          },
          "average_grade": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "buckets": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "max_grade": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "min_grade": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "present_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ExamUpdateRequest": {
        "type": "object",
        "description": "Payload for updating an exam",
        "properties": {
          "coefficient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "duration_minutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "exam_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "exam_type": {
            "type": "string",
            "nullable": true
          },
          "instructions": {
            "type": "string",
            "nullable": true
          },
          "is_published": {
            "type": "boolean",
            "nullable": true
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "total_points": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          }
        }
      },
      "ExamsListParams": {
        "type": "object",
        "description": "Query parameters supported by the exams list endpoint",
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "exam_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "is_published": {
            "type": "boolean",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "subject_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "to": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "ExamsListResponse": {
        "type": "object",
        "description": "Paginated list response for exams",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExamResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "required": ["message", "user", "session"],
        "properties": {
          "message": {
            "type": "string"
          },
          "session": {
            "$ref": "#/components/schemas/SessionTokenMetadata"
          },
          "user": {
            "$ref": "#/components/schemas/UserProfileResponse"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["refresh_token"],
        "properties": {
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ParticipationAverageParams": {
        "type": "object",
        "description": "Query parameters for participation average calculation",
        "required": ["start_date", "end_date"],
        "properties": {
          "end_date": {
            "type": "string",
            "example": "2024-12-31"
          },
          "start_date": {
            "type": "string",
            "example": "2024-01-01"
          }
        }
      },
      "ParticipationAverageResponse": {
        "type": "object",
        "description": "Response for participation average calculation",
        "required": [
          "student_id",
          "total_sessions_with_participation",
          "total_sessions_in_period",
          "coverage_percentage",
          "period"
        ],
        "properties": {
          "coverage_percentage": {
            "type": "number",
            "format": "double"
          },
          "participation_average": {
            "type": "number",
            "format": "double",
            "example": 3.8,
            "nullable": true
          },
          "period": {
            "$ref": "#/components/schemas/DateRangeInfo"
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          },
          "total_sessions_in_period": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "total_sessions_with_participation": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "ParticipationDetails": {
        "type": "object",
        "description": "Participation details for student profile",
        "required": [
          "total_sessions_with_participation",
          "total_sessions_in_period",
          "coverage_percentage"
        ],
        "properties": {
          "coverage_percentage": {
            "type": "number",
            "format": "double"
          },
          "total_sessions_in_period": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "total_sessions_with_participation": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "required": ["type", "title", "status", "detail"],
        "properties": {
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": ["refresh_token"],
        "properties": {
          "device_fingerprint": {
            "type": "string",
            "nullable": true
          },
          "device_label": {
            "type": "string",
            "nullable": true
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "required": ["message", "user", "session"],
        "properties": {
          "message": {
            "type": "string"
          },
          "session": {
            "$ref": "#/components/schemas/SessionTokenMetadata"
          },
          "user": {
            "$ref": "#/components/schemas/UserProfileResponse"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password", "display_name"],
        "properties": {
          "display_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "required": ["message", "user"],
        "properties": {
          "message": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserProfileResponse"
          }
        }
      },
      "SchoolYearClassesListParams": {
        "type": "object",
        "description": "Query parameters supported by the school year classes list endpoint",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          }
        }
      },
      "SchoolYearCreateRequest": {
        "type": "object",
        "description": "Payload for creating a school year",
        "required": ["name"],
        "properties": {
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "SchoolYearPatchRequest": {
        "type": "object",
        "description": "Payload for updating a school year",
        "properties": {
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "SchoolYearResponse": {
        "type": "object",
        "description": "Representation of a school year in API responses",
        "required": ["id", "name", "is_active", "created_at", "updated_at"],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SchoolYearsListParams": {
        "type": "object",
        "description": "Query parameters supported by the school years list endpoint",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          }
        }
      },
      "SchoolYearsListResponse": {
        "type": "object",
        "description": "Paginated list response for school years",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchoolYearResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SessionAttendanceViewResponse": {
        "type": "object",
        "description": "Response for session attendance view with enriched data and summary",
        "required": ["attendance", "summary"],
        "properties": {
          "attendance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentAttendanceRecordResponse"
            },
            "description": "List of attendance records with student information"
          },
          "summary": {
            "$ref": "#/components/schemas/AttendanceSummaryResponse"
          }
        }
      },
      "SessionCounts": {
        "type": "object",
        "description": "Session count information for student analytics",
        "required": [
          "total_sessions",
          "attended_sessions",
          "sessions_with_participation"
        ],
        "properties": {
          "attended_sessions": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "sessions_with_participation": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "total_sessions": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "SessionTokenMetadata": {
        "type": "object",
        "required": [
          "access_token_expires_at",
          "refresh_token_issued_at",
          "refresh_token_expires_at"
        ],
        "properties": {
          "access_token_expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "refresh_token_expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "refresh_token_issued_at": {
            "type": "string",
            "format": "date-time"
          },
          "refresh_token_last_used_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "StudentAttendanceRecordResponse": {
        "type": "object",
        "description": "Combined attendance record with student information",
        "required": ["participation", "student"],
        "properties": {
          "participation": {
            "$ref": "#/components/schemas/StudentParticipationResponse"
          },
          "student": {
            "$ref": "#/components/schemas/StudentAttendanceResponse"
          }
        }
      },
      "StudentAttendanceResponse": {
        "type": "object",
        "description": "Response representation of a student for attendance view",
        "required": ["id", "first_name", "last_name"],
        "properties": {
          "current_class_id": {
            "type": "string",
            "format": "uuid",
            "description": "Current class ID (if assigned)",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "Optional external ID",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "Student's first name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique ID of the student"
          },
          "last_name": {
            "type": "string",
            "description": "Student's last name"
          }
        }
      },
      "StudentClassesListParams": {
        "type": "object",
        "description": "Query parameters supported by the student classes list endpoint",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          }
        }
      },
      "StudentClassesListResponse": {
        "type": "object",
        "description": "Paginated list response for student classes",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StudentCreateRequest": {
        "type": "object",
        "description": "Payload for creating a student",
        "required": ["first_name", "last_name"],
        "properties": {
          "current_class_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "improvement_axes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Concentration", "Organisation du travail"],
            "nullable": true
          },
          "last_name": {
            "type": "string"
          },
          "needs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Besoin de soutien en mathématiques",
              "Accompagnement lecture"
            ],
            "nullable": true
          },
          "observations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Participation active en classe",
              "Bon esprit d'équipe"
            ],
            "nullable": true
          },
          "strengths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Créativité", "Persévérance"],
            "nullable": true
          }
        }
      },
      "StudentExamResultDto": {
        "type": "object",
        "description": "Response for a student's exam result",
        "required": [
          "id",
          "user_id",
          "exam_id",
          "student_id",
          "is_absent",
          "marked_at"
        ],
        "properties": {
          "comments": {
            "type": "string",
            "nullable": true
          },
          "exam_id": {
            "type": "string",
            "format": "uuid"
          },
          "grade": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "grade_display": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_absent": {
            "type": "boolean"
          },
          "marked_at": {
            "type": "string",
            "format": "date-time"
          },
          "points_obtained": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "StudentExamResultWithDetailsDto": {
        "type": "object",
        "description": "Response for a student's exam result with exam details",
        "required": [
          "id",
          "user_id",
          "exam_id",
          "student_id",
          "is_absent",
          "marked_at",
          "exam_title",
          "exam_date",
          "subject_id",
          "subject_name"
        ],
        "properties": {
          "coefficient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "exam_date": {
            "type": "string",
            "format": "date"
          },
          "exam_id": {
            "type": "string",
            "format": "uuid"
          },
          "exam_title": {
            "type": "string"
          },
          "exam_type": {
            "type": "string",
            "nullable": true
          },
          "grade": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "grade_display": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_absent": {
            "type": "boolean"
          },
          "marked_at": {
            "type": "string",
            "format": "date-time"
          },
          "points_obtained": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          },
          "subject_id": {
            "type": "string",
            "format": "uuid"
          },
          "subject_name": {
            "type": "string"
          },
          "total_points": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decimal"
              }
            ],
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "StudentExamResultsListParams": {
        "type": "object",
        "description": "Query parameters for listing student exam results across multiple exams",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "Pagination cursor (base64 encoded)",
            "nullable": true
          },
          "date_from": {
            "type": "string",
            "format": "date",
            "description": "Filter by exam date from (inclusive)",
            "nullable": true
          },
          "date_to": {
            "type": "string",
            "format": "date",
            "description": "Filter by exam date to (inclusive)",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return (default: 20, max: 100)",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "subject_id": {
            "type": "string",
            "format": "uuid",
            "description": "Filter by subject ID",
            "nullable": true
          }
        }
      },
      "StudentExamResultsListResponse": {
        "type": "object",
        "description": "Response for listing student exam results across multiple exams",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentExamResultWithDetailsDto"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StudentParticipationResponse": {
        "type": "object",
        "description": "Response representation of a student participation record",
        "required": [
          "id",
          "user_id",
          "course_session_id",
          "student_id",
          "is_present",
          "marked_at",
          "version"
        ],
        "properties": {
          "behavior": {
            "type": "string",
            "description": "Optional behavior notes",
            "nullable": true
          },
          "camera_enabled": {
            "type": "boolean",
            "description": "Optional camera enabled status",
            "nullable": true
          },
          "course_session_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the course session"
          },
          "homework_done": {
            "type": "boolean",
            "description": "Optional homework completion status",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique ID of the participation record"
          },
          "is_present": {
            "type": "boolean",
            "description": "Whether the student was present"
          },
          "marked_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the record was created/updated"
          },
          "participation_level": {
            "type": "integer",
            "format": "int32",
            "description": "Optional participation level (0-3)",
            "nullable": true
          },
          "specific_remarks": {
            "type": "string",
            "description": "Optional specific remarks",
            "nullable": true
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the student"
          },
          "technical_issues": {
            "type": "string",
            "description": "Optional technical issues notes",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the teacher/user who owns this record"
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "description": "Version number for optimistic locking"
          }
        }
      },
      "StudentPatchRequest": {
        "type": "object",
        "description": "Payload for updating a student",
        "properties": {
          "current_class_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "improvement_axes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Concentration", "Organisation du travail"],
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "needs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Besoin de soutien en mathématiques",
              "Accompagnement lecture"
            ],
            "nullable": true
          },
          "observations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Participation active en classe",
              "Bon esprit d'équipe"
            ],
            "nullable": true
          },
          "strengths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Créativité", "Persévérance"],
            "nullable": true
          }
        }
      },
      "StudentProfileAnalytics": {
        "type": "object",
        "description": "Analytics data for student profile",
        "required": [
          "attendance_details",
          "participation_details",
          "period",
          "period_source"
        ],
        "properties": {
          "attendance_details": {
            "$ref": "#/components/schemas/AttendanceDetails"
          },
          "attendance_rate": {
            "type": "number",
            "format": "double",
            "example": 85.5,
            "nullable": true
          },
          "participation_average": {
            "type": "number",
            "format": "double",
            "example": 3.8,
            "nullable": true
          },
          "participation_details": {
            "$ref": "#/components/schemas/ParticipationDetails"
          },
          "period": {
            "$ref": "#/components/schemas/DateRangeInfo"
          },
          "period_source": {
            "type": "string"
          }
        }
      },
      "StudentProfileParams": {
        "type": "object",
        "description": "Query parameters for student profile endpoint with optional date range",
        "properties": {
          "end_date": {
            "type": "string",
            "example": "2024-12-31",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2024-09-01",
            "nullable": true
          }
        }
      },
      "StudentProfileResponse": {
        "type": "object",
        "description": "Complete student profile response with analytics",
        "required": [
          "id",
          "first_name",
          "last_name",
          "full_name",
          "analytics",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "analytics": {
            "$ref": "#/components/schemas/StudentProfileAnalytics"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "current_class_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "full_name": {
            "type": "string",
            "example": "Marie Dupont"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "improvement_axes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Concentration", "Organisation"],
            "nullable": true
          },
          "last_name": {
            "type": "string"
          },
          "needs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Besoin de soutien en mathématiques"],
            "nullable": true
          },
          "observations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Participation active en classe"],
            "nullable": true
          },
          "strengths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Créativité", "Persévérance"],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StudentResponse": {
        "type": "object",
        "description": "Representation of a student in API responses",
        "required": [
          "id",
          "first_name",
          "last_name",
          "full_name",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "current_class_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "full_name": {
            "type": "string",
            "example": "Marie Dupont"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "improvement_axes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Concentration", "Organisation du travail"],
            "nullable": true
          },
          "last_name": {
            "type": "string"
          },
          "needs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Besoin de soutien en mathématiques",
              "Accompagnement lecture"
            ],
            "nullable": true
          },
          "observations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Participation active en classe",
              "Bon esprit d'équipe"
            ],
            "nullable": true
          },
          "strengths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Créativité", "Persévérance"],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StudentsListParams": {
        "type": "object",
        "description": "Query parameters supported by the students list endpoint",
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "q": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StudentsListResponse": {
        "type": "object",
        "description": "Paginated list response for students",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubjectCreateRequest": {
        "type": "object",
        "description": "Payload for creating a subject",
        "required": ["name", "code"],
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SubjectExamsListParams": {
        "type": "object",
        "description": "Query parameters for listing exams by subject ID",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "exam_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "is_published": {
            "type": "boolean",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "to": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "SubjectPatchRequest": {
        "type": "object",
        "description": "Payload for updating a subject",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubjectResponse": {
        "type": "object",
        "description": "Representation of a subject in API responses",
        "required": ["id", "name", "code", "created_at", "updated_at"],
        "properties": {
          "code": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubjectsListParams": {
        "type": "object",
        "description": "Query parameters supported by the subjects list endpoint",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "q": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubjectsListResponse": {
        "type": "object",
        "description": "Paginated list response for subjects",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TimeSlotCreateRequest": {
        "type": "object",
        "description": "Payload for creating a time slot",
        "required": ["name", "start_time", "end_time"],
        "properties": {
          "display_order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "example": "10:00"
          },
          "is_break": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "example": "09:00"
          }
        }
      },
      "TimeSlotPatchRequest": {
        "type": "object",
        "description": "Payload for updating a time slot",
        "properties": {
          "display_order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "example": "10:00",
            "nullable": true
          },
          "is_break": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "example": "09:00",
            "nullable": true
          }
        }
      },
      "TimeSlotResponse": {
        "type": "object",
        "description": "Representation of a time slot in API responses",
        "required": [
          "id",
          "name",
          "start_time",
          "end_time",
          "duration_minutes",
          "is_break",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "display_order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "duration_minutes": {
            "type": "integer",
            "format": "int32"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "example": "10:00"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_break": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "example": "09:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeSlotsListParams": {
        "type": "object",
        "description": "Query parameters supported by the time slots list endpoint",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "is_break": {
            "type": "boolean",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          }
        }
      },
      "TimeSlotsListResponse": {
        "type": "object",
        "description": "Paginated list response for time slots",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSlotResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "required": ["id", "email", "display_name", "created_at"],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "display_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "WeeklyTemplateCreateRequest": {
        "type": "object",
        "description": "Payload for creating a weekly template",
        "required": [
          "school_year_id",
          "day_of_week",
          "time_slot_id",
          "class_id",
          "subject_id"
        ],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "day_of_week": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "maximum": 7,
            "minimum": 1
          },
          "is_active": {
            "type": "boolean"
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid"
          },
          "subject_id": {
            "type": "string",
            "format": "uuid"
          },
          "time_slot_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "WeeklyTemplatePatchRequest": {
        "type": "object",
        "description": "Payload for updating a weekly template",
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "day_of_week": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "maximum": 7,
            "minimum": 1
          },
          "is_active": {
            "type": "boolean",
            "nullable": true
          },
          "subject_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "time_slot_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "WeeklyTemplateResponse": {
        "type": "object",
        "description": "Representation of a weekly template in API responses",
        "required": [
          "id",
          "school_year_id",
          "day_of_week",
          "time_slot_id",
          "class_id",
          "subject_id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "day_of_week": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "maximum": 7,
            "minimum": 1
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_active": {
            "type": "boolean"
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid"
          },
          "subject_id": {
            "type": "string",
            "format": "uuid"
          },
          "time_slot_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WeeklyTemplatesListParams": {
        "type": "object",
        "description": "Query parameters supported by the weekly templates list endpoint",
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "day_of_week": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "maximum": 7,
            "minimum": 1
          },
          "is_active": {
            "type": "boolean",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "nullable": true,
            "maximum": 100,
            "minimum": 1
          },
          "school_year_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "subject_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "WeeklyTemplatesListResponse": {
        "type": "object",
        "description": "Paginated list response for weekly templates",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeeklyTemplateResponse"
            }
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "auth_cookie": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "academic-periods",
      "description": "Academic period management endpoints with ordering and overlap validation"
    },
    {
      "name": "auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "classes",
      "description": "Class management endpoints"
    },
    {
      "name": "course-sessions",
      "description": "Course session management and scheduling endpoints"
    },
    {
      "name": "exams",
      "description": "Exam management and publication endpoints"
    },
    {
      "name": "exam-results",
      "description": "Exam results upsert and statistics endpoints"
    },
    {
      "name": "attendance",
      "description": "Student attendance and participation tracking endpoints"
    },
    {
      "name": "school-years",
      "description": "School year management and activation endpoints"
    },
    {
      "name": "students",
      "description": "Student management endpoints"
    },
    {
      "name": "subjects",
      "description": "Subject management endpoints"
    },
    {
      "name": "time-slots",
      "description": "Time slot management endpoints"
    },
    {
      "name": "weekly-templates",
      "description": "Weekly template management endpoints for scheduling classes and subjects"
    }
  ]
}
